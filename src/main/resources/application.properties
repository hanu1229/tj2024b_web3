# 내장 톰캣(서버)의 port 변경
server.port = 8080
# 연동할 JDBC URL, 외부(MySQL WorkBench)에서 DB를 생성한 후에 진행(create database springweb;)
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
# 연동할 JDBC 계정
spring.datasource.username=root
# 연동할 JDBC 계정 비밀번호 (주의 : 띄어쓰기 포함하므로 주의)
spring.datasource.password=1234

# JPA DDL 자동 설정 : create/update/none, alter, drop 등등
spring.jpa.hibernate.ddl-auto=create

# * 더미/샘플 데이터 , schema.sql 파일은 엔티티 생성하므로 필요없다. data.sql DML 가능하다.
# JPA 엔티티가 생성되기전에 data.sql 실행 하므로 불가능하다, 해결방안 : JPA가 엔티티 생성하고 data.sql 실행될수 있게 한다.
spring.sql.init.mode = always
# JPA가 엔티티 생성하고 data.sql 실행될수 있게 한다.
spring.jpa.defer-datasource-initialization=true

# JPA SQL console 출력 여부 설정
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql = true
# JPA SQL console DML ?매개변수 값 출력 설정
logging.level.org.hibernate.SQL = DEBUG
logging.level.org.hibernate.orm.jdbc.bind = TRACE

# Redis : noSQL을 사용하는 외부 Redis 연동
spring.redis.host=localhost
spring.redis.port=6379

