## 내장 톰캣(서버)의 port 변경
#server.port = 8080
## 연동할 JDBC URL, 외부(MySQL WorkBench)에서 DB를 생성한 후에 진행(create database springweb;)
#spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
## 연동할 JDBC 계정
#spring.datasource.username=root
## 연동할 JDBC 계정 비밀번호 (주의 : 띄어쓰기 포함하므로 주의)
#spring.datasource.password=1234
#
## JPA DDL 자동 설정 : create, alter, drop 등등
#spring.jpa.hibernate.ddl-auto=create
#
## JPA SQL console 출력 여부 설정
#spring.jpa.show-sql = true
#spring.jpa.properties.hibernate.format_sql = true
## JPA SQL console DML ?매개변수 값 출력 설정
#logging.level.org.hibernate.SQL = DEBUG
#logging.level.org.hibernate.orm.jdbc.bind = TRACE


# ========================= 배포 테스트(인메모리 - H2) =========================
# H2를 DB로 연동
spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.url=jdbc:h2:mem:springweb2
spring.datasource.username=sa
spring.datasource.password=
# H2에 접속하는 방법 설정(선택사항)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# koyeb에서 사용할 포트 설정
spring.prot=${PORT:8080}
# koyeb에서 h2-console 들어가는 방법
# DB_CLOSE_DELAY=-1 --> 콘솔로 접속을 유지하고 싶을 때 사용 | (개발 시 추천)
# WEB_ALLOW_OTHERS=TRUE --> 외부 서버에서 h2-console 접근 허용
# DB_CLOSE_ON_EXIT=FALSE --> 자동 재시작 환경에서 DB 유지하고 싶을 때 사용 | (개발 중 안정성 ↑)
#spring.datasource.url=jdbc:h2:mem:springweb2;DB_CLOSE_DELAY=-1;WEB_ALLOW_OTHERS=TRUE;DB_CLOSE_ON_EXIT=FALSE
#spring.h2.console.settings.web-allow-others=true
# JPA DDL 자동 설정 : create, alter, drop 등등
spring.jpa.hibernate.dll-auto=update
# ========================= 배포 테스트(인메모리 - H2) =========================